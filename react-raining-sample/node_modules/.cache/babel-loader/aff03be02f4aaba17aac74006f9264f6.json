{"ast":null,"code":"var _jsxFileName = \"/home/subhajit/reacttraining/react-raining-sample/src/components/Password.js\";\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { Input, InputGroup } from 'reactstrap';\n\nconst Password = () => {\n  let schema = yup.object().shape({\n    pass: yup.string().required()\n  });\n  const value = '';\n  const [password, setPass] = useState(value);\n  const [errors, showError] = useState(false);\n\n  const checkValid = input => {\n    schema.isValid({\n      pass: password\n    }).then(function (valid) {\n      showError(!valid);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: event => {\n      setPass(event.target.password);\n      checkValid(password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Password;","map":{"version":3,"sources":["/home/subhajit/reacttraining/react-raining-sample/src/components/Password.js"],"names":["React","useState","yup","Input","InputGroup","Password","schema","object","shape","pass","string","required","value","password","setPass","errors","showError","checkValid","input","isValid","then","valid","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,KAAT,EAAgBC,UAAhB,QAAkC,YAAlC;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAGJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,IAAAA,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb;AADwB,GAAnB,CAAb;AAGA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAsBb,QAAQ,CAACW,KAAD,CAApC;AACA,QAAM,CAACG,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMgB,UAAU,GAAIC,KAAD,IAAW;AAC5BZ,IAAAA,MAAM,CAACa,OAAP,CAAe;AACbV,MAAAA,IAAI,EAAEI;AADO,KAAf,EAEGO,IAFH,CAEQ,UAAUC,KAAV,EAAiB;AACvBL,MAAAA,SAAS,CAAC,CAACK,KAAF,CAAT;AACD,KAJD;AAKD,GAND;;AAQA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,KAAK,EAAER,QAArD;AAA+D,IAAA,QAAQ,EAAGS,KAAD,IAAW;AAClFR,MAAAA,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaV,QAAd,CAAP;AACAI,MAAAA,UAAU,CAACJ,QAAD,CAAV;AACD,KAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AAaD,CA5BD;;AA6BA,eAAeR,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { Input, InputGroup } from 'reactstrap';\n\nconst Password = () => {\n  let schema = yup.object().shape({\n    pass: yup.string().required()\n  })\n  const value = '';\n  const [password, setPass] = useState(value);\n  const [errors, showError] = useState(false);\n  const checkValid = (input) => {\n    schema.isValid({\n      pass: password\n    }).then(function (valid) {\n      showError(!valid);\n    });\n  }\n\n  return (\n    <h6>\n      <InputGroup>\n        <input type=\"password\" placeholder=\"Password\" value={password} onChange={(event) => {\n          setPass(event.target.password)\n          checkValid(password);\n        }} />\n\n        {/* <span className={errors ? \"error\" : \"d-none\"}\n    > Password is  invalid</span> */}\n      </InputGroup>\n    </h6>\n  )\n}\nexport default Password;"]},"metadata":{},"sourceType":"module"}