{"ast":null,"code":"var _jsxFileName = \"/home/subhajit/reacttraining/react-raining-sample/src/components/Password.js\";\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { Input, InputGroup } from 'reactstrap';\n\nconst Password = () => {\n  let schema = yup.object().shape({\n    pass: yup.string().required()\n  });\n  const value = '';\n  const [password, setPass] = useState(value);\n  const [errors, showError] = useState(false);\n\n  const checkValid = input => {\n    schema.isValid({\n      pass: password\n    }).then(function (valid) {\n      showError(!valid);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    placeholder: \"Password\",\n    value: password,\n    onChange: event => {\n      setPass(event.target.password);\n      checkValid(password);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    className: errors ? \"error\" : \"d-none\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, \" Password is  invalid\")));\n};\n\nexport default Password;","map":{"version":3,"sources":["/home/subhajit/reacttraining/react-raining-sample/src/components/Password.js"],"names":["React","useState","yup","Input","InputGroup","Password","schema","object","shape","pass","string","required","value","password","setPass","errors","showError","checkValid","input","isValid","then","valid","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,KAAR,EAAcC,UAAd,QAA+B,YAA/B;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAEJ,GAAG,CAACK,MAAJ,GAAaC,KAAb,CAAmB;AAC7BC,IAAAA,IAAI,EAAEP,GAAG,CAACQ,MAAJ,GAAaC,QAAb;AADuB,GAAnB,CAAZ;AAGA,QAAMC,KAAK,GAAG,EAAd;AACA,QAAM,CAACC,QAAD,EAAWC,OAAX,IAAuBb,QAAQ,CAACW,KAAD,CAArC;AACA,QAAM,CAACG,MAAD,EAAQC,SAAR,IAAmBf,QAAQ,CAAC,KAAD,CAAjC;;AACC,QAAMgB,UAAU,GAAEC,KAAD,IAAS;AACxBZ,IAAAA,MAAM,CAACa,OAAP,CAAe;AACfV,MAAAA,IAAI,EAAEI;AADS,KAAf,EAECO,IAFD,CAEM,UAASC,KAAT,EAAe;AACrBL,MAAAA,SAAS,CAAC,CAACK,KAAF,CAAT;AACD,KAJC;AAKF,GANA;;AAQD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACF;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,WAAW,EAAC,UAAnC;AAA8C,IAAA,KAAK,EAAER,QAArD;AAA+D,IAAA,QAAQ,EAAGS,KAAD,IAAW;AAAER,MAAAA,OAAO,CAACQ,KAAK,CAACC,MAAN,CAAaV,QAAd,CAAP;AACrFI,MAAAA,UAAU,CAACJ,QAAD,CAAV;AACA,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADE,eAKF;AAAM,IAAA,SAAS,EAAEE,MAAM,GAAG,OAAH,GAAa,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BALE,CADF,CADF;AAYD,CA3BD;;AA4BA,eAAeV,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport {Input,InputGroup} from 'reactstrap';\n\nconst Password = () => {\n  let schema =yup.object().shape({\n    pass :yup.string().required()\n  })\n  const value = '';\n  const [password, setPass ] = useState(value);\n  const [errors,showError]=useState(false);\n   const checkValid=(input)=>{\n     schema.isValid({\n     pass :password\n   }).then(function(valid){\n     showError(!valid);\n   });\n  }\n\n  return (\n    <h6>\n      <InputGroup>\n    <input type=\"password\" placeholder=\"Password\" value={password} onChange={(event) => { setPass(event.target.password) \n     checkValid(password);\n    }} />\n   \n    <span className={errors ? \"error\" : \"d-none\"}\n    > Password is  invalid</span>\n    </InputGroup>\n    </h6>\n  )\n}\nexport default Password;"]},"metadata":{},"sourceType":"module"}