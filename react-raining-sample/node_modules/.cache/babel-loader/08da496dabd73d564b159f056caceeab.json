{"ast":null,"code":"var _jsxFileName = \"/home/subhajit/reacttraining/react-raining-sample/src/components/Username.js\";\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { InputGroup } from 'reactstrap';\nlet schema = yup.object().shape({\n  usernameEntered: yup.string().required()\n});\nlet user;\nexport const getUsername = () => {\n  return user;\n};\n\nconst Username = props => {\n  const {\n    placeholder,\n    value\n  } = props;\n  const [username, setUsername] = useState(value);\n  const [errortext, showError] = useState(false);\n\n  const checkValid = input => {\n    schema.isValid({\n      usernameEntered: input\n    }).then(function (valid) {\n      console.log(valid);\n      showError(!valid);\n    });\n    schema.validate({\n      usernameEntered: input\n    }).catch(function (err) {\n      console.log(err.name);\n      console.log(err.errors);\n    });\n  };\n\n  const setUser = parameter => {\n    user = parameter;\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: placeholder,\n    onChange: event => {\n      setUsername(event.target.value);\n      checkValid(username);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }))));\n};\n\nUsername.defaultProps = {\n  errorMesage: null,\n  placeholder: 'Username',\n  value: ''\n};\nexport default Username;","map":{"version":3,"sources":["/home/subhajit/reacttraining/react-raining-sample/src/components/Username.js"],"names":["React","useState","yup","InputGroup","schema","object","shape","usernameEntered","string","required","user","getUsername","Username","props","placeholder","value","username","setUsername","errortext","showError","checkValid","input","isValid","then","valid","console","log","validate","catch","err","name","errors","setUser","parameter","event","target","defaultProps","errorMesage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAUC,UAAV,QAA4B,YAA5B;AAEA,IAAIC,MAAM,GAAGF,GAAG,CAACG,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,EAAAA,eAAe,EAAEL,GAAG,CAACM,MAAJ,GAAaC,QAAb;AADa,CAAnB,CAAb;AAGA,IAAIC,IAAJ;AACA,OAAO,MAAMC,WAAW,GAAC,MAAI;AAC3B,SAAOD,IAAP;AACD,CAFM;;AAGP,MAAME,QAAQ,GAAIC,KAAD,IAAW;AAC1B,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA;AAAf,MAAyBF,KAA/B;AAGA,QAAM,CAACG,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAACc,KAAD,CAAxC;AACA,QAAM,CAACG,SAAD,EAAYC,SAAZ,IAAyBlB,QAAQ,CAAC,KAAD,CAAvC;;AACA,QAAMmB,UAAU,GAAIC,KAAD,IAAW;AAC5BjB,IAAAA,MAAM,CAACkB,OAAP,CAAe;AACbf,MAAAA,eAAe,EAAEc;AADJ,KAAf,EAEIE,IAFJ,CAES,UAAUC,KAAV,EAAiB;AACxBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACAL,MAAAA,SAAS,CAAC,CAACK,KAAF,CAAT;AAED,KAND;AAQApB,IAAAA,MAAM,CAACuB,QAAP,CAAgB;AAACpB,MAAAA,eAAe,EAAEc;AAAlB,KAAhB,EAA0CO,KAA1C,CAAgD,UAASC,GAAT,EAAa;AAE5DJ,MAAAA,OAAO,CAACC,GAAR,CAAaG,GAAG,CAACC,IAAjB;AAECL,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACE,MAAhB;AACD,KALD;AAMD,GAfD;;AAkBA,QAAMC,OAAO,GAAEC,SAAD,IAAa;AACxBvB,IAAAA,IAAI,GAACuB,SAAL;AACF,GAFD;;AAOA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAEnB,WAAhC;AAA6C,IAAA,QAAQ,EAAGoB,KAAD,IAAW;AAChEjB,MAAAA,WAAW,CAACiB,KAAK,CAACC,MAAN,CAAapB,KAAd,CAAX;AACAK,MAAAA,UAAU,CAACJ,QAAD,CAAV;AACD,KAHD;AAGG,IAAA,KAAK,EAAEA,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAcD,CA7CD;;AA8CAJ,QAAQ,CAACwB,YAAT,GAAwB;AACtBC,EAAAA,WAAW,EAAE,IADS;AAEtBvB,EAAAA,WAAW,EAAE,UAFS;AAGtBC,EAAAA,KAAK,EAAE;AAHe,CAAxB;AAKA,eAAeH,QAAf","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport {  InputGroup } from 'reactstrap';\n\nlet schema = yup.object().shape({\n  usernameEntered: yup.string().required()\n})\nlet user;\nexport const getUsername=()=>{\n  return user;\n}\nconst Username = (props) => {\n  const { placeholder, value } = props;\n\n   \n  const [username, setUsername] = useState(value);\n  const [errortext, showError] = useState(false);\n  const checkValid = (input) => {\n    schema.isValid({\n      usernameEntered: input\n     }).then(function (valid) {\n      console.log(valid);\n      showError(!valid);\n\n    });\n\n    schema.validate({usernameEntered: input}).catch(function(err){\n     \n     console.log( err.name);\n  \n      console.log(err.errors);\n    })\n  }\n\n \n  const setUser=(parameter)=>{\n     user=parameter;\n  }\n\n\n\n\n  return (\n    <div>\n      <InputGroup>\n        <h6>\n          <input type=\"text\" placeholder={placeholder} onChange={(event) => {\n            setUsername(event.target.value)\n            checkValid(username)\n          }} value={username}  />\n         \n        </h6>\n      </InputGroup>\n    </div>\n\n  )\n};\nUsername.defaultProps = {\n  errorMesage: null,\n  placeholder: 'Username',\n  value: ''\n};\nexport default Username;"]},"metadata":{},"sourceType":"module"}