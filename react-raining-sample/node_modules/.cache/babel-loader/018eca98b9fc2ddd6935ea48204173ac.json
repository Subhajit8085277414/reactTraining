{"ast":null,"code":"var _jsxFileName = \"/home/subhajit/reacttraining/react-raining-sample/src/components/Username.js\";\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { Input, InputGroup } from 'reactstrap'; //let yup = require ('yup');\n\nlet value = '';\n\nconst Username = () => {\n  let schema = yup.object().shape({\n    usernameEntered: yup.string().required()\n  });\n  const [username, setUsername] = useState(value); //const [errors,showError]=useState(false);\n\n  schema.isValid({\n    usernameEntered: username\n  }).then(function (valid) {\n    console.log(valid);\n  });\n  return /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    onChange: event => {\n      setUsername(event.target.value);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default Username; //onChange={ (event) => { updateInputValue(event.target.value)}}","map":{"version":3,"sources":["/home/subhajit/reacttraining/react-raining-sample/src/components/Username.js"],"names":["React","useState","yup","Input","InputGroup","value","Username","schema","object","shape","usernameEntered","string","required","username","setUsername","isValid","then","valid","console","log","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAQC,KAAR,EAAcC,UAAd,QAA8B,YAA9B,C,CACA;;AACA,IAAKC,KAAK,GAAE,EAAZ;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAEL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAC7BC,IAAAA,eAAe,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb;AADY,GAAnB,CAAZ;AAIA,QAAM,CAAEC,QAAF,EAAYC,WAAZ,IAA4Bb,QAAQ,CAACI,KAAD,CAA1C,CALqB,CAMrB;;AACCE,EAAAA,MAAM,CAACQ,OAAP,CAAe;AACbL,IAAAA,eAAe,EAAEG;AADJ,GAAf,EAEGG,IAFH,CAEQ,UAASC,KAAT,EAAe;AACrBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,GAJD;AAOD,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACA;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAA2C,IAAA,QAAQ,EAAIG,KAAD,IAAW;AAAEN,MAAAA,WAAW,CAACM,KAAK,CAACC,MAAN,CAAahB,KAAd,CAAX;AAAiC,KAApG;AAAsG,IAAA,KAAK,EAAEQ,QAA7G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,CADF;AAKD,CAnBD;;AAoBA,eAAeP,QAAf,C,CACA","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport {Input,InputGroup}from 'reactstrap';\n//let yup = require ('yup');\nlet  value= '';\nconst Username = () => {\n  let schema =yup.object().shape({\n    usernameEntered :yup.string().required()\n  })\n  \n  const [ username, setUsername ] = useState(value);\n  //const [errors,showError]=useState(false);\n   schema.isValid({\n     usernameEntered :username\n   }).then(function(valid){\n     console.log(valid);\n   });\n\n\n  return (\n    <h6>\n    <input type=\"text\" placeholder=\"Username\"  onChange={ (event) => { setUsername(event.target.value) }} value={username} />\n    </h6>\n  )\n}\nexport default Username;\n//onChange={ (event) => { updateInputValue(event.target.value)}}"]},"metadata":{},"sourceType":"module"}