{"ast":null,"code":"var _jsxFileName = \"/home/subhajit/reacttraining/react-raining-sample/src/components/Username.js\";\nimport React, { useState } from 'react';\nimport * as yup from 'yup';\nimport { InputGroup } from 'reactstrap';\nlet value = '';\nlet errortext = '';\n\nconst Username = () => {\n  let schema = yup.object().shape({\n    usernameEntered: yup.string().required()\n  });\n  const [username, setUsername] = useState(value);\n  const [errors, showError] = useState(false);\n\n  const checkValid = input => {\n    schema.isValid({\n      usernameEntered: input\n    }).then(function (valid) {\n      console.log(valid);\n    });\n    schema.validate({\n      usernameEntered: input\n    }).catch(function (err) {\n      console.log(err.name);\n      errortext = err.errors;\n      console.log(err.errors);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(InputGroup, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h6\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    placeholder: \"Username\",\n    onChange: event => {\n      setUsername(event.target.value);\n      checkValid(username);\n    },\n    value: username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, \" \", errortext, \"  \")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default Username; //onChange={ (event) => { updateInputValue(event.target.value)}}","map":{"version":3,"sources":["/home/subhajit/reacttraining/react-raining-sample/src/components/Username.js"],"names":["React","useState","yup","InputGroup","value","errortext","Username","schema","object","shape","usernameEntered","string","required","username","setUsername","errors","showError","checkValid","input","isValid","then","valid","console","log","validate","catch","err","name","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAAUC,UAAV,QAA4B,YAA5B;AAEA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,SAAS,GAAC,EAAd;;AACA,MAAMC,QAAQ,GAAG,MAAM;AACrB,MAAIC,MAAM,GAAGL,GAAG,CAACM,MAAJ,GAAaC,KAAb,CAAmB;AAC9BC,IAAAA,eAAe,EAAER,GAAG,CAACS,MAAJ,GAAaC,QAAb;AADa,GAAnB,CAAb;AAKA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bb,QAAQ,CAACG,KAAD,CAAxC;AACA,QAAM,CAACW,MAAD,EAASC,SAAT,IAAsBf,QAAQ,CAAC,KAAD,CAApC;;AACA,QAAMgB,UAAU,GAAIC,KAAD,IAAW;AAC5BX,IAAAA,MAAM,CAACY,OAAP,CAAe;AACbT,MAAAA,eAAe,EAAEQ;AADJ,KAAf,EAIGE,IAJH,CAIQ,UAAUC,KAAV,EAAiB;AACvBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD,KAND;AAQAd,IAAAA,MAAM,CAACiB,QAAP,CAAgB;AAACd,MAAAA,eAAe,EAAEQ;AAAlB,KAAhB,EAA0CO,KAA1C,CAAgD,UAASC,GAAT,EAAa;AAE5DJ,MAAAA,OAAO,CAACC,GAAR,CAAaG,GAAG,CAACC,IAAjB;AACAtB,MAAAA,SAAS,GAACqB,GAAG,CAACX,MAAd;AACCO,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAG,CAACX,MAAhB;AACD,KALD;AAMD,GAfD;;AAkBA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,IAAI,EAAC,MAAZ;AAAmB,IAAA,WAAW,EAAC,UAA/B;AAA0C,IAAA,QAAQ,EAAGa,KAAD,IAAW;AAC7Dd,MAAAA,WAAW,CAACc,KAAK,CAACC,MAAN,CAAazB,KAAd,CAAX;AACAa,MAAAA,UAAU,CAACJ,QAAD,CAAV;AACD,KAHD;AAGG,IAAA,KAAK,EAAEA,QAHV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAKE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAKR,SAAL,OALF,CADF,eASE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,CADF,CADF;AAiBD,CA3CD;;AA4CA,eAAeC,QAAf,C,CACA","sourcesContent":["import React, { useState } from 'react';\nimport * as yup from 'yup';\nimport {  InputGroup } from 'reactstrap';\n\nlet value = '';\nlet errortext='';\nconst Username = () => {\n  let schema = yup.object().shape({\n    usernameEntered: yup.string().required()\n  })\n\n\n  const [username, setUsername] = useState(value);\n  const [errors, showError] = useState(false);\n  const checkValid = (input) => {\n    schema.isValid({\n      usernameEntered: input\n     \n\n    }).then(function (valid) {\n      console.log(valid);\n    });\n\n    schema.validate({usernameEntered: input}).catch(function(err){\n\n     console.log( err.name);\n     errortext=err.errors;\n      console.log(err.errors);\n    })\n  }\n\n\n  return (\n    <div>\n      <InputGroup>\n        <h6>\n          <input type=\"text\" placeholder=\"Username\" onChange={(event) => {\n            setUsername(event.target.value)\n            checkValid(username)\n          }} value={username}  />\n          <p> {errortext}  </p>\n         \n        </h6>\n        <br />\n\n      </InputGroup>\n    </div>\n\n  )\n}\nexport default Username;\n//onChange={ (event) => { updateInputValue(event.target.value)}}"]},"metadata":{},"sourceType":"module"}